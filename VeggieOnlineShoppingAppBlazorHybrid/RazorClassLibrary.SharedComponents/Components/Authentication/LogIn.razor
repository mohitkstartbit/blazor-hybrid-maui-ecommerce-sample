
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h3>Login</h3>

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        <p>@Error</p>
    </div>
}

<div class="card">
     <div class="card-body">
        <h5 class="card-title"> Please enter your details</h5>
        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator/>
            <ValidationSummary/>
            <div class="form-group">
                <label for="email">Email Address</label>
                <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
                <ValidationMessage For="@(() => loginModel.Email)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText id="password" type="password" class="form-control"  @bind-Value="loginModel.Password"/>
                <ValidationMessage For="@(() => loginModel.Password)" />
            </div>
            <button class="btn btn-success" type="submit">Submit</button>
        </EditForm>
     </div>
</div>

@code {
   
    private LogInModel loginModel = new LogInModel();
    private bool ShowErrors;
    private string Error = "";

    private async Task HandleLogin()
    {
        ShowErrors = false;
        var result = await AuthService.Login(loginModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Error!;
            ShowErrors = true;
        }
    }
}
