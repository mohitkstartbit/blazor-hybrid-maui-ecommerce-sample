
@inject NavigationManager NavigationManager;
<!-- Page Container -->
<div style="display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;">
    <!-- Page Heading -->
    <div class="rz-mb-4 d-flex align-items-center" style="justify-content: center;">
        <RadzenIcon Icon="add_box" Style="font-size: 32px; margin-right: 12px;" />
        <h4 class="m-0">Add New Product</h4>
    </div>
    <p class="rz-text-secondary">Fill the form below to add a new product to your inventory.</p>
</div>

<RadzenContent Container="main" Style="padding: 2rem;">
    <!-- Error Notification -->
    @if (ShowErrors)
    {
        <RadzenAlert Severity="AlertSeverity.Error" Summary="Failed to Add Product" Detail="@Error" Class="rz-mb-4" />
    }
    <!-- Product Form Card -->
    <RadzenCard Style="padding: 2rem;">
        <RadzenTemplateForm TItem="Product" Data=@Product Submit=@SubmitProduct InvalidSubmit=@OnInvalidSubmit>
            <RadzenRow Gap="2rem">
                <RadzenColumn Size="12" SizeMD="2"></RadzenColumn>
                <RadzenColumn Size="12" SizeMD="8">
                    <RadzenStack>

                        <!-- Product Name -->
                        <RadzenFormField Text="Product Name">
                            <ChildContent>
                            <RadzenTextBox Name="ProductName" @bind-Value=@Product.product_name Style="width: 100%;" />
                            </ChildContent>
                            <Helper>
                                <RadzenRequiredValidator Component="ProductName" Text="Please fill product name." />
                            </Helper>
                        </RadzenFormField>

                        <!-- Product Image URL -->
                        <RadzenFormField Text="Product Image Url">
                            <ChildContent>
                            <RadzenTextBox Name="ProductImageUrl" @bind-Value=@Product.product_image Style="width: 100%;" />
                            </ChildContent>
                            <Helper>
                                <RadzenRequiredValidator Component="ProductImageUrl" Text="Please enter Image URL." />
                            </Helper>
                        </RadzenFormField>

                        <!-- Product Category -->
                        <RadzenFormField Text="Select Product Category">
                            <ChildContent>
                            <RadzenDropDown @bind-Value="Product.category_id" Placeholder="Select" Data="@categoriesList" Style="width: 100%;" TextProperty="category_name" ValueProperty="category_id" Name="category_name" />
                            </ChildContent>
                            <Helper>
                                <RadzenRequiredValidator Component="category_name" Text="Please select a category." />
                            </Helper>
                        </RadzenFormField>

                        <!-- Selling Price -->
                        <RadzenFormField Text="Selling Price">
                            <ChildContent>
                            <RadzenNumeric Name="ProductPrice" @bind-Value=@Product.list_price InputAttributes="@(new Dictionary<string, object>() { { "aria-label", "Selling price" } })" />
                            </ChildContent>
                            <Helper>
                                <RadzenRequiredValidator Component="ProductPrice" Text="Please define selling price." />
                            </Helper>
                        </RadzenFormField>

                        <!-- Market Price -->
                        <RadzenFormField Text="Market Price">
                            <ChildContent>
                            <RadzenNumeric Name="ProductMarketPrice" @bind-Value=@Product.marketPrice InputAttributes="@(new Dictionary<string, object>() { { "aria-label", "Market price" } })" />
                            </ChildContent>
                            <Helper>
                                <RadzenRequiredValidator Component="ProductMarketPrice" Text="Please enter market price." />
                            </Helper>
                        </RadzenFormField>

                        <!-- Quantity -->
                        <RadzenFormField Text="Stock Quantity">
                            <ChildContent>
                            <RadzenNumeric Name="ProductQuantity" @bind-Value=@Product.Quantity InputAttributes="@(new Dictionary<string, object>() { { "aria-label", "Stock quantity" } })" />
                            </ChildContent>
                            <Helper>
                                <RadzenRequiredValidator Component="ProductQuantity" Text="Please enter quantity." />
                            </Helper>
                        </RadzenFormField>

                        <!-- Description -->
                        <RadzenFormField Text="Product Description">
                            <ChildContent>
                            <RadzenTextArea Name="ProductDescription" @bind-Value="Product.productDescription" Style="width: 100%" aria-label="Description" />
                            </ChildContent>
                            <Helper>
                                <RadzenRequiredValidator Component="ProductDescription" Text="Please enter a description." />
                            </Helper>
                        </RadzenFormField>

                        <!-- Rating -->
                        <RadzenFormField Text="Product Rating">
                            <ChildContent>
                                <RadzenNumeric Name="ProductRating" @bind-Value=@Product.rating InputAttributes="@(new Dictionary<string, object>() { { "aria-label", "Rating" } })" />
                            </ChildContent>
                            <Helper>
                                <RadzenRequiredValidator Component="ProductRating" Text="Please enter rating." />
                            </Helper>
                        </RadzenFormField>

                    </RadzenStack>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeMD="2"></RadzenColumn>
            </RadzenRow>

            <!-- Submit Button -->
            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem" class="rz-mt-4">
                <RadzenButton ButtonType="ButtonType.Submit" Size="ButtonSize.Small" Icon="save" Text="Save"  />
                <RadzenButton ButtonType="ButtonType.Button" Text="Cancel" Icon="close" Size="ButtonSize.Small"  Click="@(() => NavigationManager.NavigateTo("/productList"))" />
            </RadzenStack>
        </RadzenTemplateForm>
    </RadzenCard>
</RadzenContent>
@code {
    public Product Product = new Product();
    private bool ShowErrors;
    private string Error = "";
    public List<Categories> categoriesList = new List<Categories>();
    [Inject]
    public IProductService ProductService { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var response = await ProductService.GetAllCategories();
        categoriesList = response.ToList();
    }
    private async Task SubmitProduct()
    {
        ShowErrors = false;
        var result = await ProductService.CreateProduct(Product);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Error!;
            ShowErrors = true;
        }
    }
    void OnInvalidSubmit(FormInvalidSubmitEventArgs args)
    {
        // Handle invalid submit
    }
    void OnChange(string value, string name)
    {
        
    }
}
