@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="top-row ps-3 navbar" style="background-color:#294a04">
    <div class="container-fluid">
        <img src="Images/TazaLogo.jpg" alt="Taza" style="width:auto; height:40px;" />
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu" style="background-color:#245b1d">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <RadzenIcon Icon="home" Style="margin-right: 6px;" /> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="cart">
                <RadzenIcon Icon="shopping_cart" Style="margin-right: 6px;" /> Cart
            </NavLink>
        </div>
        @if (isAdmin)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="admin">
                    <RadzenIcon Icon="admin_panel_settings" Style="margin-right: 8px;" /> Admin Panel
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="productList">
                    <RadzenIcon Icon="inventory" Style="margin-right: 8px;" /> Inventory Management
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    private bool isAdmin = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            isAdmin = user.IsInRole("Admin");
        }
    }
}
